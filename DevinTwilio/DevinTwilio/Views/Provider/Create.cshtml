
@model DevinTwilio.Models.ProviderViewModel
@{
    ViewBag.Title = "Create";
}

<hr />



<h2>@ViewBag.Title.</h2>


@using (Html.BeginForm("Create", "Provider", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />

    if (TempData["successMsg"] != null)
    {
        <div class="alert alert-success">
            <strong>@TempData["successMsg"]</strong>.
        </div>
    }

    if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-warning">
            <strong>@TempData["ErrorMessage"] </strong>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(m => m.ProviderName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ProviderName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ProviderName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ContactName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ContactName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ContactName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ContactEmail, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ContactEmail, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ContactEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ContactPhone, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ContactPhone, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ContactPhone, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Submit" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
