@model DevinTwilio.Models.ScheduleViewModels
@{
    ViewBag.Title = "Create";
}


<link href="~/Content/jquery.timepicker.css" rel="stylesheet" />


@*<style>
    .datetimepicker-hours table thead tr {
    opacity: 0;
}
</style>*@


<h3>Create Schedule Message</h3>

<p>
    @Html.ActionLink("Back to List", "Index", "Home")
</p>
@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        <div class="col-md-3">
            <input type="file" name="postedFile" class="form-control file_upload" />
        </div>
        <div class="col-md-6">
            <input type="submit" value="Import and Save CSV" class="btn btn-success" />
        </div>
    </div>
}
<hr/>
@using (Html.BeginForm("Create", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (TempData["successMessage"] != null)
                {
            <div class="alert alert-success msgbox">
                <strong>@TempData["successMessage"]</strong>
            </div>
        }
        @if (TempData["errorMessage"] != null)
                {
            <div class="alert alert-danger msgbox">
                <strong>@TempData["errorMessage"] </strong>
            </div>
        }
        @*<div class="form-group">
                @Html.Label("Start Time", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("StartTime", new { htmlAttributes = new { @class = "form-control StartTime" } })
                    @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("End Time", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("EndTime", new { htmlAttributes = new { @class = "form-control EndTime" } })
                    @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.Label("Message", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Message, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Event Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TriggerTypeId, ViewBag.TriggerTypes as IEnumerable<SelectListItem>, "Select Event Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TriggerTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="divDay">

            <div id="display_day" style="display:none">
                @Html.Label("Day", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div id="display_Event">
                @Html.Label("Event", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
           
          
            <div class="col-md-10" id="event">
                @*@Html.DropDownListFor(model => model.TriggerEventId, ViewBag.TriggerEvents as IEnumerable<SelectListItem>, "Select Trigger Event", new { @class = "form-control" })*@
                
                @Html.DropDownListFor(model => model.TriggerEventId, new List<SelectListItem>(), new { @class = "form-control" })
        
            </div>
        </div>
        <div id="divAptDay" class="form-group">
            @Html.Label("Schedule day", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Day, new { @class = "form-control", style = "width:115px;" })
                @Html.ValidationMessageFor(m => m.Day, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Trigger", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TriggerId, ViewBag.Triggers as IEnumerable<SelectListItem>, "Select Trigger", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TriggerId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group" id="divTime">
            @Html.Label("Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Time, new { @class = "form-control timepicker", style= "width:115px; overflow: scroll" })
                @Html.ValidationMessageFor(m => m.FrequencyOfDelivery, "", new { @class = "text-danger" })
            </div>
        </div>

   
        <div class="form-group">
            @Html.Label("If 1", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.If1, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.If1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("If 2", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.If2, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.If2, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Other Notes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.OtherNotes, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OtherNotes, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.Label("Time Sent", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.TimeSent, new { @class = "form-control timepicker" })
                @Html.ValidationMessageFor(m => m.TimeSent, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("MM Domain", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MMDomainName, ViewBag.MMDomains as IEnumerable<SelectListItem>, "Select MMDomain",  new { @class = "form-control" })          
        
            </div>
        </div>

        <div class="form-group">
            @Html.Label("MM Sub Domain", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MMSubDomainName, ViewBag.MMSubDomains as IEnumerable<SelectListItem>, "Select MMSubDomain", new { @class = "form-control" })
       
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Schedule Message" class="btn btn-success" />
            </div>
        </div>

    </div>
}

@section Scripts {

<script src="~/Scripts/jquery-timepicker.js"></script>
    <script type="text/javascript">
        $('.timepicker').timepicker();

        $(document).ready(function () {
            debugger;
            var event = @(ViewBag.eventId == null ? 0 : ViewBag.eventId);
            $("#divAptDay").hide();
               if(event!==0)
                {
                BindTriggerEvent(event)
                }
            if ($("#TriggerTypeId option:selected").text() == "Response") {
                $("#divAptDay").hide();
                $("#divDay").hide();
                $("#divTime").hide();
                }
            else {
                $("#divDay").show();
                $("#divTime").show();
               // $("#divAptDay").show();
                }

                HideAndShowEventDay();

        });


        $(function () {
            // setTimeout() function will be fired after page is loaded
            // it will wait for 5 sec. and then will fire
            // $("#successMessage").hide() function
            setTimeout(function () {
                $(".msgbox").hide('blind', {}, 500)
            }, 5000);
        });


        function BindTriggerEvent(eventId) {
            debugger;
            $.ajax({
                data: { id: eventId },
                url: '/Home/BindTriggerEventDropDown',
                type: 'post',
                success: function (data) {
                    debugger;
                    $("#TriggerEventId option").remove();

                    for (var i = 0; i < data.length; i++) {
                        $("#TriggerEventId").append($("<option></option>").val(data[i].Value).html(data[i].Text));
                    }
                },
                error: function () {

                }
            })
        }

        $("#TriggerTypeId").on("change", function () {
            debugger;
            var eventId = $("#TriggerTypeId").val();
            if ($("#TriggerTypeId option:selected").text() == "Response") {
                $("#divDay").hide();
                $("#divTime").hide();
                $("#divAptDay").hide();
            }
            else {
                $("#divDay").show();
                $("#divTime").show();
                //$("#divAptDay").show();
                BindTriggerEvent(eventId);
            }
            HideAndShowEventDay();
        })


        function HideAndShowEventDay() {
            if ($("#TriggerTypeId option:selected").text() == "Appointment") {
                $("#display_day").hide();
                $("#display_Event").show();
                $("#divAptDay").show();
            }
            else if ($("#TriggerTypeId option:selected").text() == "Enrollment") {
                $("#display_day").show();
                $("#display_Event").hide();
                $("#divAptDay").hide();
            }
        }
    </script>

}


