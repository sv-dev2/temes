@model DevinTwilio.Models.EventViewModels

<div class="container body-content">
    <h4>Edit Trigger Event.</h4>
    @using (Html.BeginForm("Edit", "TriggerEvent", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        if (TempData["successMsg"] != null)
        {
            <div class="alert alert-success">
                <strong>@TempData["successMsg"]</strong>.
            </div>
        }
        if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-warning">
                <strong>@TempData["ErrorMessage"] </strong>
            </div>
        }
        <hr />
        @Html.HiddenFor(m => m.Id)

        <div class="form-group">
            @Html.LabelFor(m => m.TriggerTypeName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(M => M.TriggerTypeId, new SelectList(Model.TriggerTypeList, "TriggerTypeId", "TriggerTypeName"), "-Select-", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TriggerTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="div_EventDay" style="display:none">
            @Html.LabelFor(m => m.TriggerEvent_Day, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.TriggerEvent_Day, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group" id="div_EventName">
            @Html.LabelFor(m => m.EventName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.EventName, new { @class = "form-control" })
            </div>
        </div>




        @*<div class="form-group">
            @Html.LabelFor(m => m.TriggerEvent_DateTime, new { @class = "col-md-2 control-label" })
            <div class="input-group date col-md-3" id="TriggerEvent_DateTime1">
                <input type="text" name="StrTriggerEvent_DateTime" id="StrTriggerEvent_DateTime" class="form-control" />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>*@




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-success" value="Update" />
            </div>
        </div>
    }
</div>




@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {


            if ($("#TriggerTypeId option:selected").text() == "Appointment") {
                $("#div_EventDay").hide();
                $("#div_EventName").show();
            }
            else {
                $("#div_EventDay").show();
                $("#div_EventName").hide();
            }



            $("#TriggerTypeId").change(function () {

                if ($("#TriggerTypeId option:selected").text() == "Appointment") {
                    $("#div_EventDay").hide();
                    $("#div_EventName").show();
                }
                else {
                    $("#div_EventDay").show();
                    $("#div_EventName").hide();
                }


            });

            $("#TriggerEvent_Day").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A, Command+A
                    (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: home, end, left, right, down, up
                    (e.keyCode >= 35 && e.keyCode <= 40)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });



        })
</script>

}
